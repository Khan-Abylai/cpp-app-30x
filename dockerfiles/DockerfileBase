FROM nvidia/cudagl:11.3.1-devel-ubuntu20.04
SHELL ["/bin/bash","-c"]

ENV NVIDIA_DRIVER_CAPABILITIES all
ENV CUDNN_VERSION 8.1.1.32
ENV DEBIAN_FRONTEND noninteractive
ENV TZ=Asia/Almaty

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt update && apt install -y tzdata && dpkg-reconfigure tzdata

RUN apt install -y --no-install-recommends autoconf \
automake \
apt-utils \
software-properties-common \
libtool \
pkg-config \
ca-certificates \
sudo \
build-essential \
cmake \
git \
curl \
gcc \
vim \
wget \
unzip \
yasm \
libcudnn8=$CUDNN_VERSION-1+cuda11.3 \
libcudnn8-dev=$CUDNN_VERSION-1+cuda11.3 \
ca-certificates \
libjpeg-dev \
libssl-dev \
libcurl4-openssl-dev \
libglu1-mesa-dev \
libprotobuf-dev \
protobuf-compiler \
autopoint \
bison \
flex \
gtk-doc-tools \
libglib2.0-dev  \
liborc-0.4-0 \
liborc-0.4-dev \
swig  \
libzmq3-dev \
xorg-dev \
libunwind-dev \
libdw-dev \
libgmp-dev \
libgsl-dev \
libglib2.0-dev \
flex \
bison \
libcap-dev \
libgirepository1.0-dev \
gettext \
liborc-0.4-dev \
iso-codes \
libgl-dev \
libgles-dev \
libdrm-dev \
libgraphene-1.0-dev \
libgudev-1.0-dev \
libgbm-dev \
libpng-dev \
libjpeg-dev \
libogg-dev \
libopus-dev \
libpango1.0-dev \
libvisual-0.4-dev \
libtheora-dev \
libvorbis-dev \
libxkbcommon-dev \
libwayland-dev \
libepoxy-dev \
libgcrypt20-dev \
libwebp-dev \
libopenjp2-7-dev \
libwoff-dev \
libxslt1-dev \
bubblewrap \
libseccomp-dev \
xdg-dbus-proxy \
gperf \
libsoup2.4-dev \
libvulkan-dev \
libass-dev \
libchromaprint-dev \
libaom-dev \
libbz2-dev \
liblcms2-dev \
libbs2b-dev \
libdca-dev \
libfaac-dev \
libfaad-dev \
flite1-dev \
libssl-dev \
libfdk-aac-dev \
libfluidsynth-dev \
libgsm1-dev \
libkate-dev \
libgme-dev \
libde265-dev \
liblilv-dev \
libmodplug-dev \
libmjpegtools-dev \
libmpcdec-dev \
libdvdnav-dev \
libdvdread-dev \
librsvg2-dev \
librtmp-dev \
libsbc-dev \
libsndfile1-dev \
libsoundtouch-dev \
libspandsp-dev \
libsrtp2-dev \
libvo-aacenc-dev \
libvo-amrwbenc-dev \
libwebrtc-audio-processing-dev \
libofa0-dev \
libzvbi-dev \
libopenexr-dev \
libwildmidi-dev \
libx265-dev \
libzbar-dev \
wayland-protocols \
libaa1-dev \
libmp3lame-dev \
libcaca-dev \
libdv4-dev \
libmpg123-dev \
libvpx-dev \
libshout3-dev \
libspeex-dev \
libtag1-dev \
libtwolame-dev \
libwavpack-dev \
liba52-0.7.4-dev \
libx264-dev \
libopencore-amrnb-dev \
libopencore-amrwb-dev \
libmpeg2-4-dev \
libavcodec-dev \
libavfilter-dev \
libavformat-dev \
libavutil-dev \
libva-dev \
libmfx-dev \
intel-media-va-driver-non-free \
libudev-dev && apt-get clean

RUN apt clean && add-apt-repository ppa:ubuntu-toolchain-r/test \
&& apt update && apt install -y gcc-11 g++-11 --no-install-recommends \
&& sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 \
&& sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11 \
&& cd /tmp/ \
&& wget https://github.com/Kitware/CMake/releases/download/v3.17.4/cmake-3.17.4.tar.gz \
&& tar -xvf cmake-3.17.4.tar.gz \
&& cd cmake-3.17.4 \
&& ./configure && make -j16 && make install -j16 \
&& rm -rf /tmp/cmake-3.17.4*

RUN ln -s /usr/lib/x86_64-linux-gnu/libnvcuvid.so.1 /usr/lib/x86_64-linux-gnu/libnvcuvid.so \
&& ln -s /usr/lib/x86_64-linux-gnu/libnvidia-encode.so.1 /usr/lib/x86_64-linux-gnu/libnvidia-encode.so

RUN cd /tmp/ && sudo apt-get install -y meson ninja-build \
&& wget https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-1.18.6.tar.xz \
&& tar -xvf gstreamer-1.18.6.tar.xz && cd gstreamer-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-base-1.18.6.tar.xz && cd gst-plugins-base-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-good-1.18.6.tar.xz && cd gst-plugins-good-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-bad-1.18.6.tar.xz && cd gst-plugins-bad-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-libav-1.18.6.tar.xz && cd gst-libav-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& rm -rf *

RUN cd /tmp/ && git clone --recursive https://github.com/whoshuu/cpr.git && cd cpr && mkdir build && cd build && cmake .. && make -j4 && make install \
&& cd /tmp/ && rm -rf cpr \
&& cd /tmp/ && wget -O json-3.9.1.tar.gz https://github.com/nlohmann/json/archive/v3.9.1.tar.gz && tar xvzf json-3.9.1.tar.gz \
&&  cd json-3.9.1 && mkdir build && cd build \
&& cmake -j8 .. && make -j8 && make install && rm -rf /tmp/json*

RUN cd /tmp/ && wget https://github.com/opencv/opencv/archive/4.5.5.tar.gz && tar -xvf *.tar.gz && mkdir opencv-4.5.5/build \
&& cd opencv-4.5.5/build && wget https://github.com/opencv/opencv_contrib/archive/4.5.5.tar.gz && tar -xvf *.tar.gz \
&& cmake  -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib-4.5.5/modules -D WITH_GTK=ON .. \
&& make -j8 && make install && rm -rf /tmp/opencv-4.5.5* /tmp/*.tar.gz

RUN cd /tmp/ && wget https://gitlab.com/artykbayevk/tensorrt_9/raw/main/TensorRT-8.0.1.6.Linux.x86_64-gnu.cuda-11.3.cudnn8.2.tar.gz \
    && tar -xvf TensorRT-8.0.1.6.Linux.x86_64-gnu.cuda-11.3.cudnn8.2.tar.gz && cd TensorRT-8.0.1.6 \
    && cp -R lib/* /usr/lib/x86_64-linux-gnu/ \
    && rm /usr/lib/x86_64-linux-gnu/libnv*.a \
    && cp include/* /usr/include/x86_64-linux-gnu/ \
    && cp bin/* /usr/bin/ \
    && rm -rf /tmp/TensorRT*